# questions.py
questions_data = {
    "variables": [
        {"question": "What is used to store data?", "options": ["Variable", "Function", "Loop", "Condition"], "correct": "Variable", "difficulty": 1},
        {"question": "What symbol assigns a value?", "options": ["+", "=", "-", "*"], "correct": "=", "difficulty": 2},
        {"question": "Which is a valid variable name?", "options": ["1var", "var_1", "var-1", "var 1"], "correct": "var_1", "difficulty": 3},
        {"question": "What type is 'Hello'?", "options": ["int", "float", "string", "bool"], "correct": "string", "difficulty": 4},
        {"question": "Can variable names start with numbers?", "options": ["Yes", "No", "Sometimes", "Only in loops"], "correct": "No", "difficulty": 5},
        {"question": "What keyword declares a constant in Python?", "options": ["var", "let", "const", "None"], "correct": "None", "difficulty": 6},
        {"question": "Which is NOT a valid variable type?", "options": ["integer", "boolean", "character", "loop"], "correct": "loop", "difficulty": 7},
        {"question": "What does x = x + 1 do?", "options": ["Error", "Increments x", "Decrements x", "Nothing"], "correct": "Increments x", "difficulty": 8},
        {"question": "What's the scope of a local variable?", "options": ["Global", "Function only", "File", "Program"], "correct": "Function only", "difficulty": 9},
        {"question": "What does += do?", "options": ["Add and assign", "Subtract", "Multiply", "Divide"], "correct": "Add and assign", "difficulty": 10},
        {"question": "What type is 42?", "options": ["int", "float", "string", "bool"], "correct": "int", "difficulty": 11},
        {"question": "What type is True?", "options": ["int", "float", "string", "bool"], "correct": "bool", "difficulty": 12},
        {"question": "Which variable name is invalid?", "options": ["my_var", "_var", "var#", "var1"], "correct": "var#", "difficulty": 13},
        {"question": "What does x = 5.5 do?", "options": ["Assigns an int", "Assigns a float", "Assigns a string", "Error"], "correct": "Assigns a float", "difficulty": 14},
        {"question": "Can you reassign a variable?", "options": ["Yes", "No", "Only strings", "Only numbers"], "correct": "Yes", "difficulty": 15},
        {"question": "What’s the default value of an uninitialized variable in Python?", "options": ["0", "None", "Error", "Empty"], "correct": "Error", "difficulty": 16},
        {"question": "What does x -= 2 do?", "options": ["Add 2", "Subtract 2", "Multiply by 2", "Divide by 2"], "correct": "Subtract 2", "difficulty": 17},
        {"question": "Which is a global variable?", "options": ["Inside function", "Outside function", "In a loop", "In a class"], "correct": "Outside function", "difficulty": 18},
        {"question": "What keyword makes a variable global?", "options": ["global", "local", "static", "const"], "correct": "global", "difficulty": 19},
        {"question": "What does x *= 3 do?", "options": ["Add 3", "Subtract 3", "Multiply by 3", "Divide by 3"], "correct": "Multiply by 3", "difficulty": 20},
        {"question": "What’s the type of 3.14 after int()?", "options": ["int", "float", "string", "bool"], "correct": "int", "difficulty": 21},
        {"question": "How do you declare multiple variables at once?", "options": ["x = y = 5", "x, y = 5", "x = 5, y = 5", "x y = 5"], "correct": "x = y = 5", "difficulty": 22},
        {"question": "What’s the result of x = '5' + 3?", "options": ["8", "53", "Error", "15"], "correct": "Error", "difficulty": 23},
        {"question": "What does x //= 2 do?", "options": ["Floor divide by 2", "Multiply by 2", "Add 2", "Subtract 2"], "correct": "Floor divide by 2", "difficulty": 24},
        {"question": "What’s the scope of a variable in a function without 'global'?", "options": ["Global", "Local", "File", "Program"], "correct": "Local", "difficulty": 25},
        {"question": "What happens if you use a variable before defining it?", "options": ["0", "None", "Error", "Random"], "correct": "Error", "difficulty": 26},
        {"question": "What’s the type of '3' after float()?", "options": ["int", "float", "string", "bool"], "correct": "float", "difficulty": 27},
        {"question": "What does x %= 2 do?", "options": ["Add 2", "Subtract 2", "Modulus 2", "Divide by 2"], "correct": "Modulus 2", "difficulty": 28},
        {"question": "What’s the result of x = int('5.5')?", "options": ["5", "5.5", "Error", "55"], "correct": "Error", "difficulty": 29},
        {"question": "How do you swap x and y values?", "options": ["x = y, y = x", "x, y = y, x", "x = y; y = x", "swap(x, y)"], "correct": "x, y = y, x", "difficulty": 30}
    ],
    "loops": [
        {"question": "What repeats code?", "options": ["Loop", "If", "Print", "Input"], "correct": "Loop", "difficulty": 1},
        {"question": "Which is a loop type?", "options": ["if", "while", "switch", "case"], "correct": "while", "difficulty": 2},
        {"question": "What does 'for' do?", "options": ["Count", "Check", "Print", "Input"], "correct": "Count", "difficulty": 3},
        {"question": "What's an infinite loop?", "options": ["Runs once", "Never ends", "Ends quick", "Skips"], "correct": "Never ends", "difficulty": 4},
        {"question": "What stops a loop?", "options": ["break", "continue", "return", "exit"], "correct": "break", "difficulty": 5},
        {"question": "What skips one iteration?", "options": ["break", "continue", "stop", "skip"], "correct": "continue", "difficulty": 6},
        {"question": "How many times does range(3) loop?", "options": ["2", "3", "4", "5"], "correct": "3", "difficulty": 7},
        {"question": "What's a nested loop?", "options": ["Loop in loop", "Fast loop", "Slow loop", "Error"], "correct": "Loop in loop", "difficulty": 8},
        {"question": "What's loop unrolling?", "options": ["Expanding loops", "Ending loops", "Starting loops", "Breaking loops"], "correct": "Expanding loops", "difficulty": 9},
        {"question": "What's a common loop optimization?", "options": ["More loops", "Fewer iterations", "More variables", "Less code"], "correct": "Fewer iterations", "difficulty": 10},
        {"question": "What does range(5) start at?", "options": ["0", "1", "5", "-1"], "correct": "0", "difficulty": 11},
        {"question": "What ends a 'while' loop?", "options": ["Condition false", "Condition true", "Break only", "Return only"], "correct": "Condition false", "difficulty": 12},
        {"question": "What does 'for i in range(3):' loop over?", "options": ["0,1,2", "1,2,3", "0,1,2,3", "1,2"], "correct": "0,1,2", "difficulty": 13},
        {"question": "Can a loop run zero times?", "options": ["Yes", "No", "Only for", "Only while"], "correct": "Yes", "difficulty": 14},
        {"question": "What does 'while True:' do?", "options": ["Runs once", "Infinite loop", "Error", "Stops"], "correct": "Infinite loop", "difficulty": 15},
        {"question": "What’s the step in range(1, 5, 2)?", "options": ["1", "2", "3", "5"], "correct": "2", "difficulty": 16},
        {"question": "What does 'break' do in a nested loop?", "options": ["Stops all loops", "Stops inner loop", "Stops outer loop", "Error"], "correct": "Stops inner loop", "difficulty": 17},
        {"question": "What’s the output of 'for i in range(2): print(i)'?", "options": ["0 1", "1 2", "0 1 2", "2"], "correct": "0 1", "difficulty": 18},
        {"question": "What does 'continue' skip?", "options": ["Entire loop", "Current iteration", "Next loop", "Break"], "correct": "Current iteration", "difficulty": 19},
        {"question": "Can 'for' loop over a string?", "options": ["Yes", "No", "Only numbers", "Only lists"], "correct": "Yes", "difficulty": 20},
        {"question": "What’s the step in range(0, 10, -1)?", "options": ["1", "-1", "0", "Error"], "correct": "Error", "difficulty": 21},
        {"question": "What does 'for i in range(5, 2, -1):' loop over?", "options": ["5,4,3", "5,4,3,2", "2,3,4,5", "Error"], "correct": "5,4,3", "difficulty": 22},
        {"question": "What’s the condition to exit a 'do-while' in Python?", "options": ["While false", "While true", "No do-while", "Break"], "correct": "No do-while", "difficulty": 23},
        {"question": "What does 'for i in [1, 2, 3]:' do?", "options": ["Loops 1-3", "Loops over list", "Error", "Infinite"], "correct": "Loops over list", "difficulty": 24},
        {"question": "How many times does 'while x < 5: x += 2' loop if x=0?", "options": ["2", "3", "4", "5"], "correct": "3", "difficulty": 25},
        {"question": "What’s the output of 'for i in range(3, 6): print(i)'?", "options": ["3 4 5", "3 4 5 6", "4 5 6", "3 4"], "correct": "3 4 5", "difficulty": 26},
        {"question": "What does 'while False:' do?", "options": ["Runs once", "Never runs", "Infinite", "Error"], "correct": "Never runs", "difficulty": 27},
        {"question": "What’s the step default in range(5)?", "options": ["0", "1", "2", "5"], "correct": "1", "difficulty": 28},
        {"question": "What does 'for i in range(10, 0, -2):' loop over?", "options": ["10,8,6,4,2", "10,9,8,7,6", "0,2,4,6,8", "Error"], "correct": "10,8,6,4,2", "difficulty": 29},
        {"question": "How do you loop over a string 'abc'?", "options": ["for c in 'abc':", "for c in range('abc'):", "while 'abc':", "loop 'abc':"], "correct": "for c in 'abc':", "difficulty": 30}
    ],
    "conditions": [
        {"question": "What makes decisions?", "options": ["If", "Loop", "Function", "Variable"], "correct": "If", "difficulty": 1},
        {"question": "What checks equality?", "options": ["=", "==", "!=", "<"], "correct": "==", "difficulty": 2},
        {"question": "What does else do?", "options": ["True case", "False case", "Loop", "Error"], "correct": "False case", "difficulty": 3},
        {"question": "What's elif short for?", "options": ["Else if", "End if", "Early if", "Extra if"], "correct": "Else if", "difficulty": 4},
        {"question": "What does > mean?", "options": ["Less", "Greater", "Equal", "Not equal"], "correct": "Greater", "difficulty": 5},
        {"question": "What's && in Python?", "options": ["and", "or", "not", "&"], "correct": "and", "difficulty": 6},
        {"question": "How many conditions in if-elif-else?", "options": ["1", "2", "3", "Unlimited"], "correct": "Unlimited", "difficulty": 7},
        {"question": "What's a ternary operator?", "options": ["3 conditions", "Short if-else", "Loop", "Function"], "correct": "Short if-else", "difficulty": 8},
        {"question": "What evaluates to True/False?", "options": ["String", "Boolean", "Integer", "Float"], "correct": "Boolean", "difficulty": 9},
        {"question": "What's short-circuit evaluation?", "options": ["Skip conditions", "All conditions", "Loop", "Error"], "correct": "Skip conditions", "difficulty": 10},
        {"question": "What does != mean?", "options": ["Equal", "Not equal", "Greater", "Less"], "correct": "Not equal", "difficulty": 11},
        {"question": "What does if x > 5: do?", "options": ["Runs if x > 5", "Runs if x < 5", "Error", "Always runs"], "correct": "Runs if x > 5", "difficulty": 12},
        {"question": "What’s 'or' in Python?", "options": ["||", "or", "&&", "!"], "correct": "or", "difficulty": 13},
        {"question": "What does < mean?", "options": ["Less than", "Greater than", "Equal", "Not equal"], "correct": "Less than", "difficulty": 14},
        {"question": "What’s 'not' in Python?", "options": ["!", "not", "&", "|"], "correct": "not", "difficulty": 15},
        {"question": "What does if True: do?", "options": ["Runs", "Skips", "Error", "Loops"], "correct": "Runs", "difficulty": 16},
        {"question": "What’s the result of 5 > 3?", "options": ["True", "False", "Error", "5"], "correct": "True", "difficulty": 17},
        {"question": "What does >= mean?", "options": ["Less or equal", "Greater or equal", "Equal", "Not equal"], "correct": "Greater or equal", "difficulty": 18},
        {"question": "What’s 'and' precedence over 'or'?", "options": ["Higher", "Lower", "Same", "None"], "correct": "Higher", "difficulty": 19},
        {"question": "What does if False: do?", "options": ["Runs", "Skips", "Error", "Loops"], "correct": "Skips", "difficulty": 20},
        {"question": "What’s the result of 3 == 3?", "options": ["True", "False", "Error", "3"], "correct": "True", "difficulty": 21},
        {"question": "What does <= mean?", "options": ["Less or equal", "Greater or equal", "Equal", "Not equal"], "correct": "Less or equal", "difficulty": 22},
        {"question": "What’s the result of 2 != 3?", "options": ["True", "False", "Error", "2"], "correct": "True", "difficulty": 23},
        {"question": "What does 'if x:' check for x=0?", "options": ["True", "False", "Error", "None"], "correct": "False", "difficulty": 24},
        {"question": "What’s the result of True and False?", "options": ["True", "False", "Error", "None"], "correct": "False", "difficulty": 25},
        {"question": "What does 'if not x:' do for x=True?", "options": ["Runs", "Skips", "Error", "Loops"], "correct": "Skips", "difficulty": 26},
        {"question": "What’s the result of True or False?", "options": ["True", "False", "Error", "None"], "correct": "True", "difficulty": 27},
        {"question": "What does x = 5 if True else 3 do?", "options": ["x=5", "x=3", "Error", "x=None"], "correct": "x=5", "difficulty": 28},
        {"question": "What’s the result of 5 < 5?", "options": ["True", "False", "Error", "5"], "correct": "False", "difficulty": 29},
        {"question": "What’s the precedence of 'not' over 'and'?", "options": ["Higher", "Lower", "Same", "None"], "correct": "Higher", "difficulty": 30}
    ],
    "functions": [
        {"question": "What defines a function in Python?", "options": ["def", "func", "function", "define"], "correct": "def", "difficulty": 1},
        {"question": "What’s a function’s purpose?", "options": ["Store data", "Repeat code", "Reusable code", "Condition"], "correct": "Reusable code", "difficulty": 2},
        {"question": "How do you call a function named 'add'?", "options": ["add()", "call add", "add[]", "add"], "correct": "add()", "difficulty": 3},
        {"question": "What’s a parameter?", "options": ["Return value", "Function name", "Input variable", "Loop"], "correct": "Input variable", "difficulty": 4},
        {"question": "What does 'return' do?", "options": ["End function", "Output value", "Both", "Loop"], "correct": "Both", "difficulty": 5},
        {"question": "Can a function have no parameters?", "options": ["Yes", "No", "Only one", "Only two"], "correct": "Yes", "difficulty": 6},
        {"question": "What’s the scope of a function variable?", "options": ["Global", "Local", "File", "Program"], "correct": "Local", "difficulty": 7},
        {"question": "What does 'def add(x, y):' define?", "options": ["Loop", "Function", "Variable", "Condition"], "correct": "Function", "difficulty": 8},
        {"question": "What’s a default parameter?", "options": ["Required", "Optional", "Return", "Global"], "correct": "Optional", "difficulty": 9},
        {"question": "How do you set a default value?", "options": ["x = 5", "x: 5", "x = 5 in def", "def x = 5"], "correct": "x = 5 in def", "difficulty": 10},
        {"question": "What’s the result of add(2, 3) if add(x, y): return x + y?", "options": ["5", "6", "Error", "23"], "correct": "5", "difficulty": 11},
        {"question": "Can a function return nothing?", "options": ["Yes", "No", "Only numbers", "Only strings"], "correct": "Yes", "difficulty": 12},
        {"question": "What does 'pass' do in a function?", "options": ["Ends it", "Skips it", "Placeholder", "Error"], "correct": "Placeholder", "difficulty": 13},
        {"question": "What’s a function call?", "options": ["Defining", "Running", "Looping", "Checking"], "correct": "Running", "difficulty": 14},
        {"question": "What does 'def x():' with no return give?", "options": ["0", "None", "Error", "Empty"], "correct": "None", "difficulty": 15},
        {"question": "How many parameters can a function have?", "options": ["1", "2", "Unlimited", "10"], "correct": "Unlimited", "difficulty": 16},
        {"question": "What’s 'def x(a=5):' do if called as x()?", "options": ["a=5", "Error", "a=None", "a=0"], "correct": "a=5", "difficulty": 17},
        {"question": "What’s a keyword argument?", "options": ["Named parameter", "Unnamed", "Return", "Loop"], "correct": "Named parameter", "difficulty": 18},
        {"question": "What does 'def x(*args):' accept?", "options": ["One arg", "Multiple args", "No args", "Error"], "correct": "Multiple args", "difficulty": 19},
        {"question": "What’s the result of x(2) if def x(a): return a * 2?", "options": ["4", "2", "Error", "22"], "correct": "4", "difficulty": 20},
        {"question": "What does 'def x(**kwargs):' do?", "options": ["Multiple args", "Keyword args", "No args", "Error"], "correct": "Keyword args", "difficulty": 21},
        {"question": "What’s a lambda function?", "options": ["Named", "Anonymous", "Loop", "Condition"], "correct": "Anonymous", "difficulty": 22},
        {"question": "What’s the result of lambda x: x + 1 called with 3?", "options": ["3", "4", "Error", "1"], "correct": "4", "difficulty": 23},
        {"question": "Can a function call itself?", "options": ["Yes", "No", "Only once", "Error"], "correct": "Yes", "difficulty": 24},
        {"question": "What’s recursion?", "options": ["Loop", "Self-call", "Return", "Error"], "correct": "Self-call", "difficulty": 25},
        {"question": "What does 'def x(a, b=2):' do with x(5)?", "options": ["a=5, b=2", "Error", "a=2, b=5", "a=5, b=None"], "correct": "a=5, b=2", "difficulty": 26},
        {"question": "What’s the scope of a global variable in a function?", "options": ["Local", "Function only", "Global", "Error"], "correct": "Global", "difficulty": 27},
        {"question": "What does 'return x, y' return?", "options": ["List", "Tuple", "Dict", "Error"], "correct": "Tuple", "difficulty": 28},
        {"question": "What’s the result of x(a=1, b=2) if def x(b, a): return a + b?", "options": ["3", "Error", "1", "2"], "correct": "3", "difficulty": 29},
        {"question": "How do you define a function with variable args and kwargs?", "options": ["def x(*args, **kwargs):", "def x(args, kwargs):", "def x(*, **):", "Error"], "correct": "def x(*args, **kwargs):", "difficulty": 30}
    ],
    "data_structures": [
        {"question": "What’s a list in Python?", "options": ["Single value", "Ordered collection", "Key-value pair", "Loop"], "correct": "Ordered collection", "difficulty": 1},
        {"question": "How do you define a list?", "options": ["[]", "{}", "()", "<>"], "correct": "[]", "difficulty": 2},
        {"question": "What’s a dictionary?", "options": ["Ordered list", "Key-value pairs", "Single value", "Loop"], "correct": "Key-value pairs", "difficulty": 3},
        {"question": "How do you define a dictionary?", "options": ["[]", "{}", "()", "<>"], "correct": "{}", "difficulty": 4},
        {"question": "What’s a tuple?", "options": ["Mutable list", "Immutable list", "Dictionary", "Set"], "correct": "Immutable list", "difficulty": 5},
        {"question": "How do you define a tuple?", "options": ["[]", "{}", "()", "<>"], "correct": "()", "difficulty": 6},
        {"question": "What’s a set?", "options": ["Ordered list", "Unordered unique", "Key-value", "Loop"], "correct": "Unordered unique", "difficulty": 7},
        {"question": "How do you define a set?", "options": ["[]", "{}", "set()", "<>"], "correct": "set()", "difficulty": 8},
        {"question": "Can a list have duplicates?", "options": ["Yes", "No", "Only numbers", "Only strings"], "correct": "Yes", "difficulty": 9},
        {"question": "Can a set have duplicates?", "options": ["Yes", "No", "Only numbers", "Only strings"], "correct": "No", "difficulty": 10},
        {"question": "How do you add to a list?", "options": ["append()", "add()", "push()", "insert()"], "correct": "append()", "difficulty": 11},
        {"question": "How do you access list[0]?", "options": ["First item", "Last item", "Error", "Middle"], "correct": "First item", "difficulty": 12},
        {"question": "What’s dict['key']?", "options": ["Value", "Key", "Error", "List"], "correct": "Value", "difficulty": 13},
        {"question": "Can you change a tuple?", "options": ["Yes", "No", "Only once", "Only strings"], "correct": "No", "difficulty": 14},
        {"question": "How do you add to a set?", "options": ["append()", "add()", "push()", "insert()"], "correct": "add()", "difficulty": 15},
        {"question": "What’s list[1:3]?", "options": ["1st item", "2nd-3rd items", "Error", "All items"], "correct": "2nd-3rd items", "difficulty": 16},
        {"question": "How do you remove from a list?", "options": ["remove()", "delete()", "pop()", "Both a and c"], "correct": "Both a and c", "difficulty": 17},
        {"question": "What’s len(list)?", "options": ["Length", "Sum", "Error", "Last item"], "correct": "Length", "difficulty": 18},
        {"question": "What does dict.get('key') do if key doesn’t exist?", "options": ["Error", "None", "0", "Empty"], "correct": "None", "difficulty": 19},
        {"question": "How do you check if 'x' is in a list?", "options": ["x in list", "list[x]", "list.contains(x)", "x.list()"], "correct": "x in list", "difficulty": 20},
        {"question": "What’s list[-1]?", "options": ["First item", "Last item", "Error", "Middle"], "correct": "Last item", "difficulty": 21},
        {"question": "How do you merge two lists?", "options": ["+ operator", "merge()", "add()", "Error"], "correct": "+ operator", "difficulty": 22},
        {"question": "What does set.union() do?", "options": ["Intersection", "Union", "Difference", "Error"], "correct": "Union", "difficulty": 23},
        {"question": "What’s dict.keys()?", "options": ["List of keys", "List of values", "Error", "Pairs"], "correct": "List of keys", "difficulty": 24},
        {"question": "What does list.sort() do?", "options": ["Sorts in place", "Returns sorted", "Error", "Reverses"], "correct": "Sorts in place", "difficulty": 25},
        {"question": "What’s set.intersection()?", "options": ["Common items", "All items", "Difference", "Error"], "correct": "Common items", "difficulty": 26},
        {"question": "How do you clear a dictionary?", "options": ["clear()", "delete()", "remove()", "Error"], "correct": "clear()", "difficulty": 27},
        {"question": "What does list.pop(0) do?", "options": ["Removes last", "Removes first", "Error", "Adds"], "correct": "Removes first", "difficulty": 28},
        {"question": "What’s tuple[1:]?", "options": ["First item", "All but first", "Error", "Last"], "correct": "All but first", "difficulty": 29},
        {"question": "How do you convert list to set?", "options": ["set(list)", "list.set()", "convert(list)", "Error"], "correct": "set(list)", "difficulty": 30}
    ],
    "input_output": [
        {"question": "How do you print 'Hello'?", "options": ["print('Hello')", "echo 'Hello'", "write('Hello')", "say 'Hello'"], "correct": "print('Hello')", "difficulty": 1},
        {"question": "What’s input() used for?", "options": ["Output", "User input", "Loop", "Condition"], "correct": "User input", "difficulty": 2},
        {"question": "What does print(5) output?", "options": ["5", "Five", "Error", "Nothing"], "correct": "5", "difficulty": 3},
        {"question": "What’s the default input() type?", "options": ["int", "float", "string", "bool"], "correct": "string", "difficulty": 4},
        {"question": "How do you convert input to int?", "options": ["int(input())", "input().int()", "to_int(input())", "Error"], "correct": "int(input())", "difficulty": 5},
        {"question": "What does print('Hi', end='') do?", "options": ["No newline", "Newline", "Error", "Space"], "correct": "No newline", "difficulty": 6},
        {"question": "What’s the default print separator?", "options": ["Space", "Comma", "Newline", "None"], "correct": "Space", "difficulty": 7},
        {"question": "How do you read a file?", "options": ["open()", "read()", "file()", "Error"], "correct": "open()", "difficulty": 8},
        {"question": "What mode opens a file for writing?", "options": ["r", "w", "a", "rb"], "correct": "w", "difficulty": 9},
        {"question": "What does input('Name: ') show?", "options": ["Name:", "Error", "Name", "Nothing"], "correct": "Name:", "difficulty": 10},
        {"question": "What does print(1, 2, 3) output?", "options": ["1 2 3", "123", "Error", "1,2,3"], "correct": "1 2 3", "difficulty": 11},
        {"question": "How do you write to a file?", "options": ["write()", "print()", "save()", "Error"], "correct": "write()", "difficulty": 12},
        {"question": "What’s the default file mode?", "options": ["r", "w", "a", "rb"], "correct": "r", "difficulty": 13},
        {"question": "What does print('a', 'b', sep=',') output?", "options": ["a b", "a,b", "ab", "Error"], "correct": "a,b", "difficulty": 14},
        {"question": "How do you close a file?", "options": ["close()", "end()", "finish()", "Error"], "correct": "close()", "difficulty": 15},
        {"question": "What does int('5') return?", "options": ["5", "Five", "Error", "5.0"], "correct": "5", "difficulty": 16},
        {"question": "What’s the result of input() if user enters 10?", "options": ["10 (string)", "10 (int)", "Error", "None"], "correct": "10 (string)", "difficulty": 17},
        {"question": "What does 'with open() as f:' do?", "options": ["Auto-closes", "Loops", "Errors", "Writes"], "correct": "Auto-closes", "difficulty": 18},
        {"question": "What mode appends to a file?", "options": ["r", "w", "a", "rb"], "correct": "a", "difficulty": 19},
        {"question": "What does print(5 + 3) output?", "options": ["5 3", "8", "Error", "53"], "correct": "8", "difficulty": 20},
        {"question": "What’s the result of float('3.14')?", "options": ["3.14", "3", "Error", "314"], "correct": "3.14", "difficulty": 21},
        {"question": "How do you read all lines from a file?", "options": ["readlines()", "read()", "lines()", "Error"], "correct": "readlines()", "difficulty": 22},
        {"question": "What does print('x\\ny') output?", "options": ["x y", "x\ny", "x then y on new line", "Error"], "correct": "x then y on new line", "difficulty": 23},
        {"question": "What’s the mode for reading binary?", "options": ["r", "w", "rb", "wb"], "correct": "rb", "difficulty": 24},
        {"question": "What does input() return if empty?", "options": ["None", "Empty string", "Error", "0"], "correct": "Empty string", "difficulty": 25},
        {"question": "How do you format 'Hello {0}' with 'World'?", "options": ["format('World')", "replace('World')", "add('World')", "Error"], "correct": "format('World')", "difficulty": 26},
        {"question": "What does f.write('text') return?", "options": ["Text length", "None", "Error", "Text"], "correct": "Text length", "difficulty": 27},
        {"question": "What’s the result of print(f'x={5}')?", "options": ["x=5", "5", "Error", "x 5"], "correct": "x=5", "difficulty": 28},
        {"question": "How do you read one line from a file?", "options": ["readline()", "read()", "line()", "Error"], "correct": "readline()", "difficulty": 29},
        {"question": "What does print('a', 'b', sep='\\n') output?", "options": ["a b", "a\nb", "ab", "Error"], "correct": "a\nb", "difficulty": 30}
    ]
}